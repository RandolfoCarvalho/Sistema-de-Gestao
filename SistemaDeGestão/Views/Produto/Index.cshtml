@using SistemaDeGestão.Services
@inject CategoriaService categoriaService
@model List<SistemaDeGestão.Models.Produto>
@{
    var produtosAgrupadosPorCategoriaId = Model.GroupBy(p => p.CategoriaId);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Shop Homepage - Start Bootstrap Template</title>
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />
    <link href="css/styles.css" rel="stylesheet" />
    <style>
        .produto-item {
            border: 1px solid #ccc;
            background-color: #f9f9f9;
            padding: 10px;
            margin: 5px;
            cursor: move;
            display: inline-block;
            width: 100px;
            height: 100px;
        }

        .dropzone {
            border: 2px dashed #ccc;
            padding: 10px;
            min-height: 200px;
            margin: 10px;
        }

        .placeholder-image {
            background-color: #f0f0f0;
            height: 180px;
            border: 1px solid #ddd;
            width: 100%;
        }

        #grid-snap {
            width: 100%;
            border-radius: 0.2px;
            padding: 2%;
            margin: 1rem 0 0 1rem;
            background-color: #29e;
            color: #fff;
            font-size: 1.2em;
            touch-action: none;
        }

        /* Nova regra CSS para desativar a ação de toque padrão */
        .dragging-container,
        .dragging-container * {
            -ms-touch-action: none;
            touch-action: none;
        }
    </style>
</head>
<body>
    <!-- Navigation-->
    <!-- Header-->
    <header class="bg-dark py-5">
        <div class="container px-4 px-lg-5 my-5">
            <div class="text-center text-white">
                <h1 class="display-4 fw-bolder">Shop in style</h1>
                <p class="lead fw-normal text-white-50 mb-0">With this shop homepage template</p>
            </div>
        </div>
    </header>
    <!-- Section-->
    <section class="py-5">
        <div class="container px-4 px-lg-5 mt-5 dragging-container">
            @foreach (var grupo in produtosAgrupadosPorCategoriaId)
            {
                var nomeCategoria = categoriaService.ObterNomeCategoriaPorId(grupo.Key);

                <h2>@nomeCategoria</h2>
                <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
                    @foreach (var produto in grupo)
                    {
                        <div data-id="@produto.Id" id="produto-@produto.Id" class="produto-item resize-drag col mb-5">
                            <div class="card h-100">
                                <div>
                                    <a href="@Url.Action("Detalhes", "Produto", new { id = produto.Id })">
                                        <img src="URL_DA_IMAGEM" alt="Imagem do Produto" class="placeholder-image" />
                                    </a>
                                </div>
                                <div class="card-footer p-2 pt-0 border-top-0 bg-transparent">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <form asp-action="Delete" asp-route-id="@produto.Id" method="post">
                                                <button type="submit" class="btn btn-danger btn-sm">Excluir</button>
                                            </form>
                                        </div>
                                        <div>
                                            <a href="@Url.Action("Put", "Produto", new { id = produto.Id })" class="btn btn-primary btn-sm" style="margin-left: 5px;">Editar</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body p-2">
                                    <div class="text-center">
                                        <h5 class="fw-bolder">@produto.Nome</h5>
                                        $@produto.Preco.ToString("0.00")
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </section>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
    <script src="js/scripts.js"></script>
    <!-- Container para React -->
    <div id="root"></div>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- jQuery UI -->
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const elementos = document.querySelectorAll('.resize-drag');

            elementos.forEach(function (element) {
                interact(element)
                    .draggable({
                        inertia: true,
                        modifiers: [
                            interact.modifiers.restrict({
                                restriction: element.parentNode,
                                elementRect: { top: 0, left: 0, bottom: 1, right: 1 },
                                endOnly: true
                            })
                        ],
                        listeners: {
                            move(event) {
                                let { x, y } = element.dataset;
                                x = parseFloat(x || 0) + event.dx;
                                y = parseFloat(y || 0) + event.dy;

                                element.style.transform = `translate(${x}px, ${y}px)`;
                                element.dataset.x = x;
                                element.dataset.y = y;
                            }
                        }
                    })
                    .resizable({
                        edges: { left: true, right: true, bottom: true, top: true },
                        inertia: true,
                        modifiers: [
                            interact.modifiers.restrictEdges({
                                outer: 'parent'
                            }),
                            interact.modifiers.restrictSize({
                                min: { width: 50, height: 50 }
                            })
                        ],
                        listeners: {
                            move(event) {
                                const { x, y } = element.dataset;
                                element.style.width = `${event.rect.width}px`;
                                element.style.height = `${event.rect.height}px`;
                                element.style.transform = `translate(${x}px, ${y}px)`;
                            }
                        }
                    });
            });
        });
    </script>
</body>
</html>
