@using SistemaDeGestão.Services
@inject CategoriaService categoriaService
@model List<SistemaDeGestão.Models.Produto>
@{
    // Agrupando os produtos por CategoriaId
    var produtosAgrupadosPorCategoriaId = Model.GroupBy(p => p.CategoriaId);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Shop Homepage - Start Bootstrap Template</title>
    <!-- Favicon-->
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- Bootstrap icons-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="css/styles.css" rel="stylesheet" />
    <style>
        .produto-item {
            border: 1px solid #ccc;
            background-color: #f9f9f9;
            padding: 10px;
            margin: 5px;
            cursor: move; /* Cursor que indica que o elemento pode ser arrastado */
            display: inline-block;
            width: 100px;
            height: 100px;
        }

        .dropzone {
            border: 2px dashed #ccc;
            padding: 10px;
            min-height: 200px;
            margin: 10px;
        }
    </style>
</head>
<body>
    <!-- Navigation-->
    <!-- Header-->
    <header class="bg-dark py-5">
        <div class="container px-4 px-lg-5 my-5">
            <div class="text-center text-white">
                <h1 class="display-4 fw-bolder">Shop in style</h1>
                <p class="lead fw-normal text-white-50 mb-0">With this shop homepage template</p>
            </div>
        </div>
    </header>
    <!-- Section-->
    <section class="py-5">
        <div class="container px-4 px-lg-5 mt-5">
            <!-- Renderização de produtos com Razor -->
            @foreach (var grupo in produtosAgrupadosPorCategoriaId)
            {
                var nomeCategoria = categoriaService.ObterNomeCategoriaPorId(grupo.Key);

                <h2>@nomeCategoria</h2>
                <div id ="dropzone" class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
                    @foreach (var produto in grupo)
                    {
                        <div data-id="@produto.Id"  class=" produto-item resize-drag col mb-5 .resize-drag">
                            <div class="card h-100">
                                <div>
                                    <a href="@Url.Action("Detalhes", "Produto", new { id = produto.Id })">
                                        <img src="URL_DA_IMAGEM" alt="Imagem do Produto" class="placeholder-image" />
                                    </a>
                                </div>

                                <div class="card-body p-4">
                                    <div class="text-center">
                                        <h5 class="fw-bolder">@produto.Nome</h5>
                                        $@produto.Preco.ToString("0.00")
                                    </div>
                                </div>

                                <div class="card-footer p-7 pt-0 border-top-0 bg-transparent">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <!-- Botão de Excluir -->
                                            <form asp-action="Delete" asp-route-id="@produto.Id" method="post">
                                                <button type="submit" class="btn btn-danger btn-sm">Excluir</button>
                                            </form>
                                        </div>
                                        <div>
                                            <!-- Botão de Editar -->
                                            <a href="@Url.Action("Put", "Produto", new { id = produto.Id })" class="btn btn-primary btn-sm" style="margin-left: 5px;">Editar</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </section>
    <!-- Footer-->
    <footer class="py-5 bg-dark">
        <div class="container"><p class="m-0 text-center text-white">Copyright &copy; Your Website 2023</p></div>
    </footer>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
    <script src="js/scripts.js"></script>
    <!-- Container para React -->
    <div id="root"></div>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- jQuery UI -->
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"></script>
</body>

</html>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Carregar posições salvas
            loadPositions();
        });

        var x = 0;
        var y = 0;

        interact('.resize-drag')
            .draggable({
                modifiers: [
                    interact.modifiers.snap({
                        targets: [
                            interact.snappers.grid({ x: 5, y: 5 })
                        ],
                        range: Infinity,
                        relativePoints: [{ x: 0, y: 0 }]
                    }),
                    interact.modifiers.restrict({
                        restriction: 'parent',
                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 },
                        endOnly: true
                    })
                ],
                inertia: true
            })
            .on('dragmove', function (event) {
                var target = event.target;
                x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;
                y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

                target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';
                target.setAttribute('data-x', x);
                target.setAttribute('data-y', y);

                // Salvar posição
                savePosition(target);
            });

        function savePosition(element) {
            var id = element.getAttribute('data-id');
            var positions = JSON.parse(localStorage.getItem('positions')) || {};
            positions[id] = {
                x: element.getAttribute('data-x'),
                y: element.getAttribute('data-y'),
                width: element.style.width,
                height: element.style.height
            };
            localStorage.setItem('positions', JSON.stringify(positions));

            // Adicione código para salvar a posição no servidor aqui, se necessário
            // fetch('/savePosition', { method: 'POST', body: JSON.stringify({ id: id, x: x, y: y, width: width, height: height }) });
        }

        function loadPositions() {
            var positions = JSON.parse(localStorage.getItem('positions')) || {};
            document.querySelectorAll('.resize-drag').forEach(function (element) {
                var id = element.getAttribute('data-id');
                if (positions[id]) {
                    var pos = positions[id];
                    element.style.transform = 'translate(' + pos.x + 'px, ' + pos.y + 'px)';
                    element.style.width = pos.width;
                    element.style.height = pos.height;
                    element.setAttribute('data-x', pos.x);
                    element.setAttribute('data-y', pos.y);
                }
            });

            // Adicione código para carregar a posição do servidor aqui, se necessário
            // fetch('/getPositions')
            //     .then(response => response.json())
            //     .then(data => {
            //         data.forEach(pos => {
            //             var element = document.querySelector('[data-id="' + pos.id + '"]');
            //             element.style.transform = 'translate(' + pos.x + 'px, ' + pos.y + 'px)';
            //             element.style.width = pos.width;
            //             element.style.height = pos.height;
            //             element.setAttribute('data-x', pos.x);
            //             element.setAttribute('data-y', pos.y);
            //         });
            //     });
        }

    </script>
}
<style>
    .placeholder-image {
        background-color: #f0f0f0; /* Cor de fundo cinza claro */
        height: 180px; /* Altura da área de imagem */
        border: 1px solid #ddd; /* Borda fina cinza */
    }
</style>
