@model SistemaDeGestão.Models.ViewModel.ProdutoViewModel
@{
    ViewData["Title"] = "Criar Novo Produto";
}

<h2 class="centered-text">@ViewData["Title"]</h2>
<head>
    <link rel="stylesheet" href="~/css//produto/criarProduto.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Exemplo de Modal Bootstrap</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/css/bootstrap-select.min.css">
</head>
<div class="form-container">
    <form asp-action="CriarProduto" method="post" class="centered-form" class="mobile-form-width">
        <!--Categorias-->
        <div class="form-group">
            <label asp-for="CategoriaId">Categoria:</label>
            <select id="CategoriaId" asp-for="CategoriaId" asp-items="Model.Categorias" class="form-control selectpicker" id="selectpicker" data-live-search="true" title="Selecione uma categoria..." data-size="5">
             </select>
            <span asp-validation-for="CategoriaId" class="text-danger"></span>
            <button type="button" class="btn btn-primary mt-2" data-toggle="modal" data-target="#modalNovaCategoria">
                Criar Categoria
            </button>
            <button type="button" class="btn btn-primary mt-2" data-toggle="modal" data-target="#modalCategorias">
                Gerenciar Categorias
            </button>
        </div>
        <div id="createCategoryFields" style="display:none;">
            <div class="form-group">
                <label asp-for="NewCategoryName">Nome da Nova Categoria:</label>
                <input asp-for="NewCategoryName" class="form-control" name="newCategoryName" />
                <span asp-validation-for="NewCategoryName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NewCategoryDescription">Descrição da Nova Categoria:</label>
                <input asp-for="NewCategoryDescription" class="form-control" name="newCategoryDescription" />
                <span asp-validation-for="NewCategoryDescription" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Nome">Nome do Produto:</label>
            <input asp-for="Nome" class="form-control" />
            <span asp-validation-for="Nome" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Descricao">Descrição:</label>
            <input asp-for="Descricao" class="form-control" />
            <span asp-validation-for="Descricao" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Preco">Preço:</label>
            <input asp-for="Preco" class="form-control" />
            <span asp-validation-for="Preco" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ProductImage">Imagem do Produto:</label>
            <input asp-for="ProductImage" class="form-control" />
            <span asp-validation-for="ProductImage" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="QuantidadeEstoque">Quantidade em Estoque:</label>
            <input asp-for="QuantidadeEstoque" class="form-control" />
            <span asp-validation-for="QuantidadeEstoque" class="text-danger"></span>
            <button type="button" class="btn btn-primary mt-2" data-toggle="modal" data-target="#modalAdicional">
                 +Adicional
            </button>
        </div>
        <button type="submit" class="btn btn-primary">Salvar Produto</button>

    </form>
    <!-- Modal Adicional -->
    <div class="modal fade" id="modalAdicional" tabindex="-1" role="dialog" aria-labelledby="modalAdicionalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalAdicionalLabel">Adicionar Novo Adicional</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="formAdicional">
                        <div class="form-group">
                            <label for="adicionalNome">Nome do Adicional:</label>
                            <input type="text" class="form-control" id="adicionalNome" name="adicionalNome" required>
                        </div>
                        <div class="form-group">
                            <label for="adicionalPreco">Preço do Adicional:</label>
                            <input type="number" class="form-control" id="adicionalPreco" name="adicionalPreco" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="adicionarAdicionalBtn">Adicionar Adicional</button>
                </div>
            </div>
        </div>
    </div>
<!-- Modal gerenciar categorias-->
<div class="modal fade" id="modalCategorias" tabindex="-1" role="dialog" aria-labelledby="modalCategoriasLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalCategoriasLabel">Gerenciar Categorias</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <ul id="categoria-list" class="list-group mt-3">
                        @foreach (var categoria in Model.Categorias)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center" data-id="@categoria.Value">
                                @categoria.Text
                                <div>
                                    <button type="button" class="btn btn-sm btn-warning" onclick="editarCategoria('@categoria.Value')">Editar</button>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="deletarCategoria('@categoria.Value')">Deletar</button>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="modalNovaCategoria" tabindex="-1" role="dialog" aria-labelledby="modalNovaCategoriaLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalNovaCategoriaLabel">Adicionar Nova Categoria</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Formulário para adicionar nova categoria -->
                <form id="formNovaCategoria">
                    <div class="form-group">
                        <label for="newCategoryName">Nome da Nova Categoria:</label>
                        <input type="text" class="form-control" id="newCategoryName" name="newCategoryName" required>
                    </div>
                    <div class="form-group">
                        <label for="newCategoryDescription">Descrição da Nova Categoria:</label>
                        <input type="text" class="form-control" id="newCategoryDescription" name="newCategoryDescription" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="salvarCategoriaBtn">Salvar Categoria</button>
            </div>
        </div>
    </div>
</div>
<!-- Scripts do Bootstrap (jQuery é necessário) -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
<!-- Scripts Picker (jQuery é necessário) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/js/bootstrap-select.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/js/i18n/defaults-pt_BR.min.js"></script> <!-- opcional: para ajustar o texto do seletor -->
<!-- Sweet Alert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
@section Scripts {
    <!-- Select Picker -->
    <script>
        $(document).ready(function () {
            $('.selectpicker').selectpicker();
        });

        //Criar categoria
        // Evento ao clicar no botão de salvar categoria
        document.getElementById('salvarCategoriaBtn').addEventListener('click', function () {
            // Aqui você pode colocar o código para enviar os dados do formulário via AJAX
            var newCategoryName = document.getElementById('newCategoryName').value;
            var newCategoryDescription = document.getElementById('newCategoryDescription').value;

            if (newCategoryName && newCategoryDescription) {
                // Exemplo de requisição AJAX usando fetch
                fetch('/Categoria/PostNovaCategoria', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ Nome: newCategoryName, Descricao: newCategoryDescription })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Erro ao adicionar categoria: ' + response.statusText);
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Exemplo de uso do SweetAlert para exibir uma mensagem de sucesso
                        Swal.fire({
                            icon: 'success',
                            title: 'Categoria adicionada com sucesso!',
                            showConfirmButton: false,
                            timer: 1500,
                        });

                        // Fechar o modal após adicionar a categoria
                        $('#modalNovaCategoria').modal('hide');

                        // Atualizar o dropdown de categorias usando SelectPicker
                        fetch('/Categoria/FindAll')
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Erro ao obter categorias: ' + response.statusText);
                                }
                                return response.json();
                            })
                            .then(data => {
                                // Limpar o dropdown atual
                                var selectCategoria = document.getElementById('CategoriaId');
                                selectCategoria.innerHTML = '';

                                // Adicionar as novas opções ao dropdown
                                data.forEach(categoria => {
                                    var option = document.createElement('option');
                                    option.value = categoria.id;
                                    option.textContent = categoria.nome;
                                    selectCategoria.appendChild(option);
                                });
                                setTimeout(function () {
                                    location.reload();
                                }, 1500);

                                // Atualizar o SelectPicker
                                $('.selectpicker').selectpicker('refresh');
                            })
                            .catch(error => {
                                console.error('Erro ao obter categorias:', error);
                            });
                    })
                    .catch(error => {
                        console.error('Erro ao adicionar categoria:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Erro ao adicionar categoria',
                            text: 'Por favor, busque suporte do responsável especializado.'
                        });
                    });

            } else {
                alert('Por favor, preencha todos os campos.');
            }
        });
        //Gerenciar Categoria
            function editarCategoria(categoriaId) {
                // Lógica para editar a categoria com o ID fornecido
                alert('Editar categoria: ' + categoriaId);
                // Aqui você pode abrir um modal de edição ou redirecionar para uma página de edição
            }
        function deletarCategoria(categoriaId) {
            if (confirm('Tem certeza de que deseja deletar esta categoria?')) {
                $.ajax({
                    url: '@Url.Action("Delete", "Categoria")',
                    type: 'POST',
                    data: { id: categoriaId },
                    success: function (result) {
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Categoria deletada com sucesso!',
                                showConfirmButton: false,
                                timer: 1500,
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                            // Remover a categoria da lista usando data-id
                            $('#categoria-list').find('li[data-id="' + categoriaId + '"]').remove();
                        } else {
                            alert('Erro ao deletar a categoria.');
                        }
                    },
                    error: function () {
                        alert('Erro na comunicação com o servidor.');
                    }
                });
            }
        }
        //adicionar adiciional
            document.getElementById('adicionarAdicionalBtn').addEventListener('click', function () {
                var adicionalNome = document.getElementById('adicionalNome').value;
                var adicionalPreco = document.getElementById('adicionalPreco').value;

                if (adicionalNome && adicionalPreco) {
                    $.ajax({
                        url: '@Url.Action("CriarAdicional", "Adicional")',
                        type: 'POST',
                        data: {
                            Nome: adicionalNome,
                            PrecoAdicional: adicionalPreco
                        },
                        success: function (result) {
                            if (result.success) {
                                // Adicionar o item de adicional à lista
                                $('#adicionalList').append(adicionalItem);

                                // Limpar formulário
                                $('#formAdicional')[0].reset();

                                // Fechar modal
                                $('#modalAdicional').modal('hide');

                                // Mostrar confirmação
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Adicional adicionado com sucesso!',
                                    showConfirmButton: false,
                                    timer: 1500
                                });

                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: result.message || 'Erro ao adicionar adicional.',
                                    showConfirmButton: true
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Erro na comunicação com o servidor.',
                                showConfirmButton: true
                            });
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Por favor, preencha todos os campos!',
                        showConfirmButton: true
                    });
                }
            });
    </script>
}
